// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechTrove.DAL;

#nullable disable

namespace TechTrove.DAL.Migrations
{
    [DbContext(typeof(TechTroveContext))]
    [Migration("20240520183530_ChangeRelationProductToOrderLine")]
    partial class ChangeRelationProductToOrderLine
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TechTroveUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechTroveUserId")
                        .IsUnique();

                    b.ToTable("TechTroveCarts");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TechTroveCartId")
                        .HasColumnType("int");

                    b.Property<int>("TechTroveProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechTroveCartId");

                    b.HasIndex("TechTroveProductId")
                        .IsUnique();

                    b.ToTable("TechTroveCartItems");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TechTroveCategories");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TechTroveUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechTroveUserId");

                    b.ToTable("TechTroveOrders");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TechTroveOrderId")
                        .HasColumnType("int");

                    b.Property<int>("TechTroveProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TechTroveOrderId");

                    b.HasIndex("TechTroveProductId")
                        .IsUnique();

                    b.ToTable("TechTroveOrderLine");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TechTroveCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TechTroveCategoryId");

                    b.ToTable("TechTroveProducts");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumberConfirmed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TechTroveUsers");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveCart", b =>
                {
                    b.HasOne("TechTrove.DAL.Entities.TechTroveUser", "TechTroveUser")
                        .WithOne("TechTroveCart")
                        .HasForeignKey("TechTrove.DAL.Entities.TechTroveCart", "TechTroveUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechTroveUser");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveCartItem", b =>
                {
                    b.HasOne("TechTrove.DAL.Entities.TechTroveCart", "TechTroveCart")
                        .WithMany("TechTroveCartItems")
                        .HasForeignKey("TechTroveCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechTrove.DAL.Entities.TechTroveProduct", "TechTroveProduct")
                        .WithOne("TechTroveCartItem")
                        .HasForeignKey("TechTrove.DAL.Entities.TechTroveCartItem", "TechTroveProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechTroveCart");

                    b.Navigation("TechTroveProduct");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveOrder", b =>
                {
                    b.HasOne("TechTrove.DAL.Entities.TechTroveUser", "TechTroveUser")
                        .WithMany("TechTroveOrders")
                        .HasForeignKey("TechTroveUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechTroveUser");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveOrderLine", b =>
                {
                    b.HasOne("TechTrove.DAL.Entities.TechTroveOrder", "TechTroveOrder")
                        .WithMany("TechTroveOrderLines")
                        .HasForeignKey("TechTroveOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechTrove.DAL.Entities.TechTroveProduct", "TechTroveProduct")
                        .WithOne("TechTroveOrderLine")
                        .HasForeignKey("TechTrove.DAL.Entities.TechTroveOrderLine", "TechTroveProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechTroveOrder");

                    b.Navigation("TechTroveProduct");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveProduct", b =>
                {
                    b.HasOne("TechTrove.DAL.Entities.TechTroveCategory", "TechTroveCategory")
                        .WithMany("TechTroveProducts")
                        .HasForeignKey("TechTroveCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechTroveCategory");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveCart", b =>
                {
                    b.Navigation("TechTroveCartItems");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveCategory", b =>
                {
                    b.Navigation("TechTroveProducts");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveOrder", b =>
                {
                    b.Navigation("TechTroveOrderLines");
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveProduct", b =>
                {
                    b.Navigation("TechTroveCartItem")
                        .IsRequired();

                    b.Navigation("TechTroveOrderLine")
                        .IsRequired();
                });

            modelBuilder.Entity("TechTrove.DAL.Entities.TechTroveUser", b =>
                {
                    b.Navigation("TechTroveCart")
                        .IsRequired();

                    b.Navigation("TechTroveOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
